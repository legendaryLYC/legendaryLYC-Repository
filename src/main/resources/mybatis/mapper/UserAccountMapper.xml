<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.design.background.mapper.UserAccountMapper" >
  <resultMap id="BaseResultMap" type="com.design.background.entity.UserAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="extract" property="extract" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, name, pay_amount, balance, extract
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_account
    where user_id = #{userId}
  </select>
  <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="Base_Column_List" /> from user_account where user_id = (select applicant_id from capital_audit where id = #{userId})
  </select>
  <!-- 通过user-id查询信息 -->
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.design.background.entity.UserAccount" >
    insert into user_account (id, user_id, name, 
      pay_amount, balance, extract
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{payAmount,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, #{extract,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.design.background.entity.UserAccount" >
    insert into user_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="extract != null" >
        extract,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="extract != null" >
        #{extract,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.design.background.entity.UserAccount" >
    update user_account
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="extract != null" >
        extract = #{extract,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.design.background.entity.UserAccount" >
    update user_account
    set user_id = #{userId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      extract = #{extract,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="com.design.background.entity.UserAccount" >
    update user_account
    set 
      balance = #{balance,jdbcType=DECIMAL},
      extract = #{extract,jdbcType=DECIMAL}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>