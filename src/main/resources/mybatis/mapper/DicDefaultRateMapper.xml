<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.design.background.mapper.DicDefaultRateMapper" >
  <resultMap id="BaseResultMap" type="com.design.background.entity.DicDefaultRate" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="water_rate" property="waterRate" jdbcType="INTEGER" />
    <result column="warm_rate" property="warmRate" jdbcType="INTEGER" />
    <result column="structure_rate" property="structureRate" jdbcType="INTEGER" />
    <result column="building_rate" property="buildingRate" jdbcType="INTEGER" />
    <result column="electricity_rate" property="electricityRate" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, water_rate, warm_rate, structure_rate, building_rate, electricity_rate, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dic_default_rate
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dic_default_rate
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.design.background.entity.DicDefaultRate" >
    insert into dic_default_rate (id, water_rate, structure_rate, 
      building_rate, electricity_rate, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{waterRate,jdbcType=INTEGER}, #{structureRate,jdbcType=INTEGER}, 
      #{buildingRate,jdbcType=INTEGER}, #{electricityRate,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.design.background.entity.DicDefaultRate" >
    insert into dic_default_rate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="waterRate != null" >
        water_rate,
      </if>
      <if test="structureRate != null" >
        structure_rate,
      </if>
      <if test="buildingRate != null" >
        building_rate,
      </if>
      <if test="electricityRate != null" >
        electricity_rate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="waterRate != null" >
        #{waterRate,jdbcType=INTEGER},
      </if>
      <if test="structureRate != null" >
        #{structureRate,jdbcType=INTEGER},
      </if>
      <if test="buildingRate != null" >
        #{buildingRate,jdbcType=INTEGER},
      </if>
      <if test="electricityRate != null" >
        #{electricityRate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.design.background.entity.DicDefaultRate" >
    update dic_default_rate
    <set >
      <if test="waterRate != null" >
        water_rate = #{waterRate,jdbcType=INTEGER},
      </if>
      <if test="structureRate != null" >
        structure_rate = #{structureRate,jdbcType=INTEGER},
      </if>
      <if test="buildingRate != null" >
        building_rate = #{buildingRate,jdbcType=INTEGER},
      </if>
      <if test="electricityRate != null" >
        electricity_rate = #{electricityRate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.design.background.entity.DicDefaultRate" >
    update dic_default_rate
    set water_rate = #{waterRate,jdbcType=INTEGER},
      structure_rate = #{structureRate,jdbcType=INTEGER},
      building_rate = #{buildingRate,jdbcType=INTEGER},
      electricity_rate = #{electricityRate,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>